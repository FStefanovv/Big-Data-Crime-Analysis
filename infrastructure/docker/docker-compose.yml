version: '3'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ../../data/from_hdfs/prisoners-df:/spark-output/:rw
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - 9870:9870
      - 9000:9000

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    depends_on:
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - PYSPARK_PYTHON=python3
    env_file:
      - ./hadoop.env
    volumes:
      - ../../scripts/py/:/py_scripts/

  spark-worker1:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker1
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8081:8081
    env_file:
      - ./hadoop.env
    
  spark-worker2:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker2
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8082:8081
    env_file:
      - ./hadoop.env

  spark-worker3:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker3
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - 8083:8081
    env_file:
      - ./hadoop.env

  citus-coordinator:
    image:  "citusdata/citus:12.1.1"
    container_name: citus-coordinator
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: prisoners
      PGDATA: /var/lib/postgresql/data/pgdata
      CITUS_MASTER: true
    volumes:
      - citus-coordinator:/var/lib/postgresql/data
    ports:
      - "5000:5432"
        
  citus-node1:
    image: "citusdata/citus:12.1.1"
    container_name: citus-node1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: prisoners
      PGDATA: /var/lib/postgresql/data/pgdata
      CITUS_WORKER: 1
      CITUS_MASTER_HOST: citus-coordinator
    depends_on:
      - citus-coordinator
    volumes:
      - citus-node1:/var/lib/postgresql/data

  metabase:
    image: metabase/metabase:latest
    ports:
      - 3000:3000
    environment:
      MB_DB_FILE: /metabase-data/metabase.db
    volumes:
      - ../../metabase-data:/metabase-data
    depends_on:
      - citus-coordinator

  zoo1:
    image: confluentinc/cp-zookeeper:4.1.3-1
    container_name: zoo1
    tmpfs: "/datalog"
    ports:
      - "2181:2181"
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka1:
    image:  confluentinc/cp-kafka:4.1.3-1
    container_name: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_CREATE_TOPICS: "complaints:1:1"
    volumes:
      - kafka1:/var/lib/kafka/data
    depends_on:
      - zoo1
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "zoo1:2181", "--list"]
      interval: 5s
      timeout: 10s
      retries: 5
      
  producer:
    build: 
      context: ../complaints_producer
      dockerfile: Dockerfile.producer
    container_name: kafka_producer
    environment:
      BOOTSTRAP_SERVER: "kafka1:19092"
      TOPIC: 'complaints'
    volumes:
      - ../../data/complaints_streaming.csv:/app/data/complaints_streaming.csv
    depends_on:
      kafka1:
        condition: service_healthy

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  citus-coordinator:
  citus-node1:
  zoo1:
  zoo1log:
  kafka1: